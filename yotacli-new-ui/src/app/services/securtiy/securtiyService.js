//app/services/security/securityService.js
//React specific entry point to allow generating React hooks.
 
import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'
 
// Define a service using a base URL and expected endpoints
export const securityApi = createApi({
  reducerPath: 'securityApi',
  baseQuery: fetchBaseQuery(
     //base url of backend API
    { baseUrl: 'http://localhost:8080' }),
  //prepareHeaders is used to configure the header of every request and gives access to getState which we use to include the token from the store
  prepareHeaders: (headers,{getState}) => {
    const token = getState().security.jwtToken;
    console.log("Token->",token);
    if(token){
        //include token in request header
        headers.set('Authorization','Bearer ${token}');
        return headers;
    }
  },
 /**
         * endpoints are a set of operations that you want to perhtmlForm against your server.
         * They're defined as an object using the builder synax.
         * I have created a query endpoint that makes a GET request to the contacts route,
         * then i exported the React hook generated by this endpoint
         */
  endpoints: (builder) => ({
    getContactDetails : builder.query({
        query:()=>({
         
        })
         
      })
  }),
})
 
// Export hooks htmlFor usage in functional components, which are
// auto-generated based on the defined endpoints
export const { useGetContactDetailsQuery } = securityApi